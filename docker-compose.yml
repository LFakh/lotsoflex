version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: netflix-postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - netflix-network

  redis:
    image: redis:alpine
    container_name: netflix-redis
    ports:
      - "6379:6379"
    networks:
      - netflix-network

  eureka-server:
    build:
      context: ./eureka-server
    container_name: netflix-eureka
    ports:
      - "8761:8761"
    networks:
      - netflix-network

  api-gateway:
    build:
      context: ./api-gateway
    container_name: netflix-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka-server
    networks:
      - netflix-network

  user-service:
    build:
      context: ./user-service
    container_name: netflix-user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres
      - eureka-server
    networks:
      - netflix-network

  content-service:
    build:
      context: ./content-service
    container_name: netflix-content-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TMDB_API_KEY=${TMDB_API_KEY}
    depends_on:
      - postgres
      - redis
      - eureka-server
    networks:
      - netflix-network

  recommendation-service:
    build:
      context: ./recommendation-service
    container_name: netflix-recommendation-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres
      - redis
      - eureka-server
    networks:
      - netflix-network

  prometheus:
    image: prom/prometheus
    container_name: netflix-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - netflix-network

  grafana:
    image: grafana/grafana
    container_name: netflix-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - netflix-network

networks:
  netflix-network:
    driver: bridge

volumes:
  postgres-data:
  grafana-data: